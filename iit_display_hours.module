<?php
/**
 * Implements hook_block_info.
 */
function iit_display_hours_block_info() {
  $blocks['hours'] = array(
    'info' => t('IIT Display Library Hours'),
    'cache' => DRUPAL_NO_CACHE
  );
  return $blocks;
}

//Communications & Marketing format for times
function iit_display_hours_format_time ($time){ 
	$time = str_replace(':00','',$time);
	$time = str_replace('am','a.m.',$time);
	$time = str_replace('pm','p.m.',$time);
	return $time;
}


function iit_display_hours_get_and_format_todays_date_time(){
  $dateFormat="l, F j";
  $timeFormat="g:ia";
  $today = date($dateFormat).", " . iit_display_hours_format_time(date($timeFormat));
  return $today;
}


//load developer key
function get_googleAPI_key(){
  $file='GoogleAPIkey.txt';
  $drupalDir='sites/all/modules/custom/display_hours/';
  if (file_exists($drupalDir) == true){
    $file = $drupalDir . $file; 
  }
  $key = file_get_contents($file); 
  if(($key== NULL)||($key=="")){
    trigger_error('Google API key not found', E_USER_NOTICE);
  }
  else {
    return $key;
  }
}


//retrieve JSON data from a Google Calendar (public)
function iit_display_hours_get_calendar_data($calendar, $dateToGet=0){
  $key = get_googleAPI_key();
  $APIformat="Y-m-d";
  $timeMin = date($APIformat,time()+$dateToGet) . 'T00:00:00.000Z';
  $timeMax = date($APIformat,time()+$dateToGet) . 'T23:59:00.000Z';
  $url='https://www.googleapis.com/calendar/v3/calendars/' . $calendar . '/events?singleEvents=true&orderby=startTime&timeMin=' . 
      $timeMin . '&timeMax=' . $timeMax . '&maxResults=1&key=' . $key;
    //this works more reliably than only getting one event
  
  $jsonFile = file_get_contents($url);
  if (!$jsonFile) {
      trigger_error('NO DATA returned from url.', E_USER_NOTICE);
  }
  else {
    // convert the string to a json object
    $jsonObj = json_decode($jsonFile);
    $dateData = $jsonObj->items;
    return $dateData;
  }
}

function iit_display_hours_check_if_open($item){   
  
  $now=time();
  
  if (isset($item->start->dateTime)){ // non 24-hour event
      $unixStart=strtotime(substr($item->start->dateTime, 0,16));
      $unixEnd=strtotime(substr($item->end->dateTime, 0,16));
  }

  else{ // all day event
    $unixStart=strtotime(substr($item->start->date, 0,16));
    $unixEnd=strtotime(substr($item->end->date, 0,16));
  }

  if ( ($now < $unixStart) || ($now > $unixEnd) ){
    $isOpen = 0;
  }
  else {
    $isOpen = 1;
  }      
  
  return $isOpen;
}

function iit_display_hours_format_open_msg($isOpen){
  if ($isOpen<=0){
    $openMsg="<span class=\"closed\">CLOSED</span>";   
  }          
  else {
    $openMsg="<span class=\"open\">OPEN</span>";
  }
  return $openMsg;
}


function iit_display_hours_format_message(){
  $galvinCal="iit.edu_8l0d8qd4qtfn7skmgkiu55uv58%40group.calendar.google.com";
  
  $message=iit_display_hours_get_and_format_todays_date_time();

  $dataObj=iit_display_hours_get_calendar_data($galvinCal);

  if (count($dataObj)>0){
    $hours = format_hours_data($dataObj);
    $isOpen = iit_display_hours_check_if_open($dataObj[0]);
    $openMsg = iit_display_hours_format_open_msg($isOpen);
    $message .= " Currently: $openMsg</p><p>$hours</p>";
  }
  else{
    $message .= " Library hours cannot be displayed at this time.";
  }
  return $message;  
  
}


function iit_display_hours_block_view($delta = '') {
  $block['subject'] = t("Today's Hours");
  $block['content'] = t('@display_msg',array(
    '@display_msg' => iit_display_hours_format_message()
  ));
  return $block;
}

// http://www.wdtutorials.com/drupal-7/drupal-7-how-to-create-module-part-1#.VV47xvlVhBc
// https://ezproxy.gl.iit.edu/login?url=http://dx.doi.org/10.1007/978-1-4302-2839-4